version: '3'
services:
  nginx:
    image: nginx
    command: /bin/bash -c "envsubst \"`env | awk -F = '{printf \" $$%s\", $$1}'`\" < /etc/nginx/conf.d/acapy.template > /etc/nginx/conf.d/acapy.conf && exec nginx -g 'daemon off;'"
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
    networks:
      - von_von

  toolbox:
    image: humancolossus/agent-web-client:version-0.4.0
    entrypoint: /bin/bash -c "npm run serve -- --port 80"
    env_file: .env
    environment:
      VUE_APP_PROTOCOL: "http"
      VUE_APP_HOST: "localhost"
      VUE_APP_OCA_REPO: "repository"
      VUE_APP_DATA_VAULT: "data-vault"
    networks:
      - von_von

  agent1.localhost:
    image: humancolossus/agent:version-0.5.4-ext-11
    command: /bin/bash -c "./startup.sh"
    ports:
      - '8150:8150'
    environment:
      AGENT_NAME: "Bob Smith"
      ACAPY_ENDPOINT: http://agent1.localhost
      SWAGGER_INBOUND_PORT: 8150
      GENESIS_URL: http://webserver:8000/genesis
      WEBHOOK_URL: ws://websocket_server1:5000
    networks:
      - von_von

  websocket_server1:
    image: olichwiruk/websocket_webhook_router:version-0.0.1
    command: /bin/bash -c "npm start"
    networks:
      - von_von

  agent2.localhost:
    image: humancolossus/agent:version-0.5.4-ext-11
    command: /bin/bash -c "./startup.sh"
    ports:
      - '8151:8150'
    environment:
      AGENT_NAME: "Alice Jones"
      ACAPY_ENDPOINT: http://agent2.localhost
      SWAGGER_INBOUND_PORT: 8150
      GENESIS_URL: http://webserver:8000/genesis
      WEBHOOK_URL: ws://websocket_server2:5000
    networks:
      - von_von

  websocket_server2:
    image: olichwiruk/websocket_webhook_router:version-0.0.1
    command: /bin/bash -c "npm start"
    networks:
      - von_von

  oca_repository:
    image: humancolossus/oca-repository:version-0.2.8
    container_name: ocarepository
    command: /bin/bash -c "bundle exec rackup -o 0.0.0.0 -p 80"
    networks:
      - von_von

  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.1
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.type=single-node
    volumes:
      - es_data01:/usr/share/elasticsearch/data
    networks:
      - von_von

  elasticsearch-mapping-init:
    build:
      context: ./oca-repository/es-config
    restart: on-failure
    depends_on:
      - es01
    links:
      - es01
    networks:
      - von_von

  oca_data_vault:
    image: humancolossus/oca-data-vault:version-0.1.2
    container_name: ocadatavault
    command: /bin/bash -c "bundle exec rackup -o 0.0.0.0 -p 80"
    env_file: ./data-vault/.env.development
    volumes:
      - ./data-vault/storage:/usr/src/app/storage
    networks:
      - von_von

  mongodb:
    image: mongo:latest
    volumes:
      - mongodb_data:/data/db
    networks:
      - von_von

volumes:
  es_data01:
    driver: local
  mongodb_data:
    driver: local

networks:
  von_von:
    external: true
