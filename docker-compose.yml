version: '3'
services:
  nginx:
    image: nginx
    command: /bin/bash -c "envsubst \"`env | awk -F = '{printf \" $$%s\", $$1}'`\" < /etc/nginx/conf.d/acapy.template > /etc/nginx/conf.d/acapy.conf && exec nginx -g 'daemon off;'"
    ports:
      - "80:80"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
    networks:
      - von_von

  toolbox:
    image: olichwiruk/aries-toolbox:web
    build: ./
    command: /bin/bash -c "npm run serve -- --port 80"
    volumes:
      - ./aries-toolbox/src:/usr/src/app/src
    networks:
      - von_von

  agent1.localhost:
    image: olichwiruk/aries-cloudagent:latest
    command: /bin/bash -c "./startup.sh"
    environment:
      AGENT_NAME: Main
      ACAPY_ENDPOINT: http://agent1.localhost
      GENESIS_URL: http://webserver:8000/genesis
    volumes:
      - ./aries-cloudagent-python/aries_cloudagent:/home/indy/aries_cloudagent
    networks:
      - von_von

  agent2.localhost:
    image: olichwiruk/aries-cloudagent:latest
    command: /bin/bash -c "./startup.sh"
    environment:
      AGENT_NAME: Client
      ACAPY_ENDPOINT: http://agent2.localhost
      GENESIS_URL: http://webserver:8000/genesis
    volumes:
      - ./aries-cloudagent-python/aries_cloudagent:/home/indy/aries_cloudagent
    networks:
      - von_von

  fileserver:
    image: python:latest
    command: python3 -m http.server 80 -d home
    volumes:
      - ./file-server:/home
    networks:
      - von_von

networks:
  von_von:
    external: true
