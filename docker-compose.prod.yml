version: '3'
services:
  nginx:
    image: nginx
    command: /bin/bash -c "envsubst \"`env | awk -F = '{printf \" $$%s\", $$1}'`\" < /etc/nginx/conf.d/acapy.prod.template > /etc/nginx/conf.d/acapy.conf && exec nginx -g 'daemon off;'"
    ports:
      - "80:80"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - toolbox1_dist:/app/toolbox1
      - toolbox2_dist:/app/toolbox2
    networks:
      - von_von

  toolbox:
    image: toolbox
    build:
      context: ./toolbox
      args:
        image: olichwiruk/aries-toolbox:version-0.1.3
        dest_toolbox1: "dist/toolbox1"
        dest_toolbox2: "dist/toolbox2"
        ACAPY_API_AGENT1: "http://agent1.localhost:8150"
        ACAPY_API_AGENT2: "http://agent2.localhost:8151"
        OCA_REPO: $VUE_APP_OCA_REPO
        DATA_VAULT: $VUE_APP_DATA_VAULT
    volumes:
      - toolbox1_dist:/usr/src/app/dist/toolbox1
      - toolbox2_dist:/usr/src/app/dist/toolbox2
    networks:
      - von_von

  agent1.localhost:
    image: olichwiruk/aries-cloudagent:version-0.4.5-ext-1
    command: /bin/bash -c "./startup.sh"
    ports:
      - "8150:8150"
    environment:
      AGENT_NAME: Main
      ACAPY_ENDPOINT: http://agent1.localhost
      SWAGGER_INBOUND_PORT: 8150
      GENESIS_URL: http://webserver:8000/genesis
    networks:
      - von_von

  agent2.localhost:
    image: olichwiruk/aries-cloudagent:version-0.4.5-ext-1
    command: /bin/bash -c "./startup.sh"
    ports:
      - "8151:8150"
    environment:
      AGENT_NAME: Client
      ACAPY_ENDPOINT: http://agent2.localhost
      SWAGGER_INBOUND_PORT: 8150
      GENESIS_URL: http://webserver:8000/genesis
    networks:
      - von_von

  oca_repository:
    image: humancolossus/oca-repository:version-0.2.5
    container_name: ocarepository
    command: /bin/bash -c "bundle exec rackup -o 0.0.0.0 -p 80"
    networks:
      - von_von

  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.1
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.type=single-node
    volumes:
      - es_data01:/usr/share/elasticsearch/data
    networks:
      - von_von

  elasticsearch-mapping-init:
    build:
      context: ./oca-repository/es-config
    restart: on-failure
    depends_on:
      - es01
    links:
      - es01
    networks:
      - von_von

  oca_data_vault:
    image: humancolossus/oca-data-vault:version-0.1.0
    container_name: ocadatavault
    command: /bin/bash -c "bundle exec rackup -o 0.0.0.0 -p 80"
    env_file: ./data-vault/.env.development
    volumes:
      - ./data-vault/storage:/usr/src/app/storage
    networks:
      - von_von

  mongodb:
    image: mongo:latest
    volumes:
      - mongodb_data:/data/db
    networks:
      - von_von

volumes:
  es_data01:
    driver: local
  mongodb_data:
    driver: local
  toolbox1_dist:
    driver: local
  toolbox2_dist:
    driver: local

networks:
  von_von:
    external: true
